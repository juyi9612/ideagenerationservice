# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy WAR app to Azure Web App - IdeaGenerationService

on:
  workflow_dispatch:

env:
  COSMOSDB_URI: ${{ secrets.COSMOSDB_URI }}
  COSMOSDB_KEY: ${{ secrets.COSMOSDB_KEY }}
  COSMOSDB_NAME: ${{ secrets.COSMOSDB_NAME }}
  AUTH0_ISSUER: ${{ secrets.AUTH0_ISSUER }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  BLOB_POSTERS_CONSTR: ${{ secrets.BLOB_POSTERS_CONSTR }}
  SPRING_PROFILES_ACTIVE: prod
        
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21.0.2'
          distribution: 'microsoft'
          
      - name: Configure application-prod.properties
        run: |
          echo "cosmosdb.uri=$COSMOSDB_URI" >> src/main/resources/application-prod.properties
          echo "cosmosdb.key=$COSMOSDB_KEY" >> src/main/resources/application-prod.properties
          echo "cosmosdb.databasename=$COSMOSDB_NAME" >> src/main/resources/application-prod.properties
          echo "blob.storage.posters.constr=$BLOB_POSTERS_CONSTR" >> src/main/resources/application-prod.properties
          
          echo "okta:" >> src/main/resources/application-prod.yml
          echo "  oauth2:" >> src/main/resources/application-prod.yml
          echo "    issuer: $AUTH0_ISSUER" >> src/main/resources/application-prod.yml
          echo "    client-id: $AUTH0_CLIENT_ID" >> src/main/resources/application-prod.yml
          echo "    client-secret: $AUTH0_CLIENT_SECRET" >> src/main/resources/application-prod.yml
      
      - name: Build with Maven
        run: mvn clean install
        
      - name: ls
        run: ls -lr ${{ github.workspace }}/target
        
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.war'
      

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D6998F32508A4F1A9A5C97A193DB9620 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7C70091DF417438F975E03B0B18F5B2F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8B5AAA09C99F4FD385F68B8FF7D8C901 }}
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'IdeaGenerationService'
          slot-name: 'Production'
          package: '*.war'
          
